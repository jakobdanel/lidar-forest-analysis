% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/intersect_area.R
\name{lfa_intersect_areas}
\alias{lfa_intersect_areas}
\title{Intersect Lidar Catalog with Spatial Features}
\usage{
lfa_intersect_areas(ctg, tile_location, areas_sf)
}
\arguments{
\item{ctg}{A LAScatalog object representing the Lidar data to be processed.}

\item{tile_location}{A tile location object representing the specific area of interest.}

\item{areas_sf}{Spatial features defining areas.}
}
\value{
A modified LAScatalog object with points outside the specified area removed.
}
\description{
This function intersects a Lidar catalog with a specific area defined by spatial features.
}
\details{
The function intersects the Lidar catalog specified by \code{ctg} with a specific area defined by
the \code{tile_location} object and \code{areas_sf}. It removes points outside the specified area and
returns a modified LAScatalog object.

The specified area is identified based on the \code{species} and \code{name} attributes in the
\code{tile_location} object. If a matching area is not found in \code{areas_sf}, the function
stops with an error.

The function then transforms the spatial reference of the identified area to match that of
the Lidar catalog using \code{sf::st_transform}.

The processing is applied to each chunk in the catalog using the \code{identify_area} function,
which merges spatial information and filters out points that are not classified as inside
the identified area. After processing, the function writes the modified LAS files back to
the original file locations, removing points outside the specified area.

If an error occurs during the processing of a chunk, a warning is issued, and the function
continues processing the next chunks. If no points are found after filtering, a warning is
issued, and NULL is returned.
}
\examples{
\dontrun{
# Example usage
lfa_intersect_areas(ctg, tile_location, areas_sf)
}

\dontrun{
# Example usage
lfa_intersect_areas(ctg, tile_location, areas_sf)
}

}
\seealso{
Other functions in the Lidar forest analysis (LFA) package.
}
